apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  {{ .Values.name | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      {{- include "project.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "project.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.hostnetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- else }}
      hostNetwork: false
      dnsPolicy: ClusterFirst
      {{- end }}
      restartPolicy: Always
      containers:
        - name: {{ .Values.name | trunc 63 | trimSuffix "-" }}
          image: {{ include "project.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - {{ .Values.cmd.cmdBinName }}
          {{- with .Values.cmd.extraArgs }}
          args:
          {{- toYaml . | trim | nindent 10 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.server.port }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | trim | nindent 12 }}
          {{- end }}
          env:
            - name: ENV_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ENV_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ENV_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ENV_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
          - containerPort: {{ .Values.server.port }}
            name: http
